//
//  WebViewProtocols.swift
//  SampleProject
//
//  Created by 植田裕作 on 2018/11/06.
//  Copyright © 2018年 Yusaku Ueda. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import Foundation

// MARK: - Wireframe

/// Routerが公開するメソッドを定義する.
///
/// Routerに適用する.
/// Presenter -> Wireframe
public protocol WebViewWireframeProtocol: class {
    /// 画面を閉じる
    func close()
}

// MARK: - Presenter

/// PresenterがViewに対して公開するメソッド・通知オブジェクトを定義する.
///
/// Presenterに適用する.
public protocol WebViewPresenterProtocol: class {

    // MARK: ViewController -> Presenter

    func viewDidLoad()
    func viewWillAppear(_ animated: Bool)
    func viewDidAppear(_ animated: Bool)
    func viewWillDisappear(_ animated: Bool)
    func viewDidDisappear(_ animated: Bool)
    /// 戻るボタンが押された時
    func onBackButton()
    /// 前へ戻るボタンが押された時
    func onBackwardButton()
    /// 次へ進むボタンが押された時
    func onForwardButton()
    /// 更新ボタンが押された時
    func onRefreshButton()

    // MARK: Presenter -> ViewController
}

// MARK: - View

/// ViewがPresenterに対して公開するメソッドを定義する.
///
/// ViewControllerに適用する.
/// Presenter -> ViewController
public protocol WebViewViewProtocol: class {
    var presenter: WebViewPresenterProtocol? { get set }

    /// 読み込み開始する
    func startLoadRequest(_ request: URLRequest)
    /// 前の履歴に進む
    func goToBackward()
    /// 次の履歴に進む
    func goToForward()
    /// 再読み込みする
    func reloadPage()
}
